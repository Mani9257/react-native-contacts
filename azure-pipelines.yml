# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'windows-latest'

# variables:
#   - group: AndroidKeystore

steps:
- task: NodeTool@0
  displayName: 'Install Node'
  inputs:
    versionSource: 'spec'
    versionSpec: '12.16.1'
    checkLatest: true

- script: npm install react-native-contacts
  #workingDirectory: src
  displayName: 'Install npm dependencies'
  
- script: yarn add react-native-contacts
  #workingDirectory: src
  displayName: 'Install yern- dependencies'
- task: JavaToolInstaller@0
  inputs:
    versionSpec: '17'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'
    
- task: Gradle@2
  inputs:
    workingDirectory: 'android'
    gradleWrapperFile: 'android/gradlew'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'bundleRelease'


# - task: Gradle@3
#   inputs:
#     gradleWrapperFile: 'android/gradlew'
#     tasks: 'build'
#     publishJUnitResults: false
#     javaHomeOption: 'Path'
#     jdkDirectory: 'C:\hostedtoolcache\windows\Java_Temurin-Hotspot_jdk\17.0.6-10'
#     gradleOptions: '-Xmx3072m'
#     sonarQubeRunAnalysis: false
#     spotBugsAnalysis: false

# - task: AndroidSigning@2
#   inputs:
#     apkFiles: '**/*.apk'
#     jarsign: true
#     jarsignerKeystoreFile: 'android.keystore'
#     jarsignerKeystorePassword: '$(jarsignerKeystorePassword)'
#     jarsignerKeystoreAlias: 'react-native-pipeline-key'
#     jarsignerKeyPassword: '$(jarsignerKeyPassword)'
#     zipalign: true

# - script: mv src/android/app/build/outputs/apk/release/app-release-unsigned.apk ReactNativePipeline$(Build.BuildNumber).apk
#   displayName: 'Rename apk'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: ReactNativePipeline$(Build.BuildNumber).apk
    artifactName: drop
    publishLocation: 'container'

# - task: AppCenterDistribute@3
#   displayName: "Create a release on App Center"
#   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
#   inputs:
#     serverEndpoint: 'app-center'
#     appSlug: 'stafford.williams/ReactNativePipeline-Android'
#     appFile: 'ReactNativePipeline$(Build.BuildNumber).apk'
#     releaseNotesOption: 'input'
#     releaseNotesInput: |
#       $(Build.SourceVersionMessage)
      
#       latest source: '$(Build.SourceVersion)'
      
#       An automated release from Azure DevOps
#     destinationType: 'groups'